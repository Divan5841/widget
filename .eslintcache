[{"/Users/divan/Desktop/projects/widget_works/src/index.tsx":"1","/Users/divan/Desktop/projects/widget_works/src/App.tsx":"2","/Users/divan/Desktop/projects/widget_works/src/pages/index.ts":"3","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/WorkSchedule.tsx":"4","/Users/divan/Desktop/projects/widget_works/src/utils/helpers.ts":"5","/Users/divan/Desktop/projects/widget_works/src/utils/icons/ArrowLeftS.tsx":"6","/Users/divan/Desktop/projects/widget_works/src/utils/icons/index.ts":"7","/Users/divan/Desktop/projects/widget_works/src/utils/icons/Left.tsx":"8","/Users/divan/Desktop/projects/widget_works/src/utils/icons/Right.tsx":"9","/Users/divan/Desktop/projects/widget_works/src/utils/icons/CalendarIcon.tsx":"10","/Users/divan/Desktop/projects/widget_works/src/utils/icons/Cross.tsx":"11","/Users/divan/Desktop/projects/widget_works/src/utils/hooks.ts":"12","/Users/divan/Desktop/projects/widget_works/src/components/Loader/Loader.tsx":"13","/Users/divan/Desktop/projects/widget_works/src/components/Empty/Empty.tsx":"14","/Users/divan/Desktop/projects/widget_works/src/utils/index.ts":"15","/Users/divan/Desktop/projects/widget_works/src/components/index.ts":"16","/Users/divan/Desktop/projects/widget_works/src/components/Calendar/Calendar.tsx":"17","/Users/divan/Desktop/projects/widget_works/src/utils/icons/TimelineIcon.tsx":"18","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/store/api.ts":"19","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/store/index.ts":"20","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/components/TimelinesTable/TimelinesTable.tsx":"21","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/components/TimelinesTable/TimelinesTooltip/TimelinesTooltip.tsx":"22","/Users/divan/Desktop/projects/widget_works/src/utils/icons/OneTime.tsx":"23"},{"size":249,"mtime":1607808461054,"results":"24","hashOfConfig":"25"},{"size":109,"mtime":1607808461050,"results":"26","hashOfConfig":"25"},{"size":45,"mtime":1607354800648,"results":"27","hashOfConfig":"25"},{"size":4920,"mtime":1612733242949,"results":"28","hashOfConfig":"25"},{"size":317,"mtime":1607771319977,"results":"29","hashOfConfig":"25"},{"size":349,"mtime":1610817646619,"results":"30","hashOfConfig":"25"},{"size":188,"mtime":1607896030790,"results":"31","hashOfConfig":"25"},{"size":346,"mtime":1610818029025,"results":"32","hashOfConfig":"25"},{"size":347,"mtime":1610818029018,"results":"33","hashOfConfig":"25"},{"size":1284,"mtime":1610818029016,"results":"34","hashOfConfig":"25"},{"size":484,"mtime":1610818029024,"results":"35","hashOfConfig":"25"},{"size":917,"mtime":1607808149739,"results":"36","hashOfConfig":"25"},{"size":606,"mtime":1607771427425,"results":"37","hashOfConfig":"25"},{"size":426,"mtime":1607771806346,"results":"38","hashOfConfig":"25"},{"size":74,"mtime":1607808252120,"results":"39","hashOfConfig":"25"},{"size":98,"mtime":1607772736536,"results":"40","hashOfConfig":"25"},{"size":1334,"mtime":1608238429459,"results":"41","hashOfConfig":"25"},{"size":1024,"mtime":1607805783763,"results":"42","hashOfConfig":"25"},{"size":1661,"mtime":1611255323768,"results":"43","hashOfConfig":"25"},{"size":22,"mtime":1607808257242,"results":"44","hashOfConfig":"25"},{"size":4054,"mtime":1612733242946,"results":"45","hashOfConfig":"25"},{"size":504,"mtime":1607898826540,"results":"46","hashOfConfig":"25"},{"size":256,"mtime":1607896030788,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1r0wdrt",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/divan/Desktop/projects/widget_works/src/index.tsx",[],["96","97"],"/Users/divan/Desktop/projects/widget_works/src/App.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/pages/index.ts",[],"/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/WorkSchedule.tsx",["98"],"/Users/divan/Desktop/projects/widget_works/src/utils/helpers.ts",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/ArrowLeftS.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/index.ts",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/Left.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/Right.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/CalendarIcon.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/Cross.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/hooks.ts",[],"/Users/divan/Desktop/projects/widget_works/src/components/Loader/Loader.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/components/Empty/Empty.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/index.ts",[],"/Users/divan/Desktop/projects/widget_works/src/components/index.ts",[],"/Users/divan/Desktop/projects/widget_works/src/components/Calendar/Calendar.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/TimelineIcon.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/store/api.ts",[],"/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/store/index.ts",[],"/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/components/TimelinesTable/TimelinesTable.tsx",["99"],"import React, { FC, useCallback, useEffect, useMemo } from 'react'\nimport { Table } from 'antd'\nimport { ColumnsType } from 'antd/lib/table/interface'\nimport clsx from 'clsx'\nimport moment from 'moment'\n\nimport { TimelinesTooltip } from './TimelinesTooltip/TimelinesTooltip'\nimport { getRangeArray, OneTime, TimelineIcon } from '../../../../utils'\nimport { Schedule, Timeline } from '../../store'\nimport styles from './TimelinesTable.module.scss'\n\nconst TIMELINE_CALL_WIDTH = 48\n\nexport type TimelinesType = 'day' | 'year'\n\ninterface ITimelinesTableProps {\n  timelines: Timeline[]\n  type: TimelinesType\n  dateTimeline?: Date\n}\n\nexport const TimelinesTable: FC<ITimelinesTableProps> = ({\n  timelines,\n  type,\n  dateTimeline,\n}) => {\n  const [timeline, getStyles] = useMemo(() => {\n    if (type === 'day') {\n      return [\n        getRangeArray(0, 24).map((hour, i) => (\n          <div key={hour + i}>\n            <div>{moment({ hour }).format('HH:mm')}</div>\n            <TimelineIcon />\n          </div>\n        )),\n        (from: string, to: string) => ({\n          gridColumnStart: Number(moment(from, 'HH:mm').format('H')) + 1,\n          gridColumnEnd: (Number(moment(to, 'HH:mm').format('H')) || 24) + 1,\n        }),\n      ]\n    }\n\n    if (type === 'year') {\n      const start = moment(timelines[0].schedule[0].from, 'DD:MM:YYYY')\n      const end = moment(\n        timelines[0].schedule[timelines[0].schedule.length - 1].to,\n        'DD:MM:YYYY',\n      ).add('d', 5)\n      const dur = moment.duration(end.diff(start)).asDays()\n\n      return [\n        getRangeArray(0, dur).map((day, i) => (\n          <div key={day + i}>\n            <div>{moment(start).add(day, 'd').format('DD.MM')}</div>\n            <OneTime />\n          </div>\n        )),\n        (from: string, to: string) => {\n          const gridColumnStart =\n            moment.duration(moment(from, 'DD:MM:YYYY').diff(start)).asDays() + 1\n\n          const gridColumnEnd =\n            moment.duration(moment(to, 'DD:MM:YYYY').diff(start)).asDays() + 1\n\n          return {\n            gridColumnStart,\n            gridColumnEnd,\n          }\n        },\n      ]\n    }\n\n    return [null, () => ({})]\n  }, [timelines, type])\n\n  const goTo = useCallback((url: string) => {\n    window.open(url, '_blank')\n  }, [])\n\n  useEffect(() => {\n    const timeline = document.querySelector('.ant-table-body')\n\n    if (timeline && dateTimeline) {\n      const start = moment(timelines[0].schedule[0].from, 'DD:MM:YYYY')\n      const end = moment(dateTimeline, 'DD:MM:YYYY')\n      const dur = moment.duration(end.diff(start)).asDays()\n\n      timeline.scrollLeft = TIMELINE_CALL_WIDTH * dur\n    }\n  }, [dateTimeline, timelines])\n\n  const data = timelines.map(({ url, schedule, name, type }, i) => ({\n    key: name + i,\n    label: [name, url],\n    timeline: schedule,\n  }))\n\n  const columns: ColumnsType<any> = [\n    {\n      title: '',\n      dataIndex: 'label',\n      fixed: 'left',\n      render: ([name, url]) => (\n        <div onClick={() => goTo(url)} className={styles.label}>\n          {name}\n        </div>\n      ),\n    },\n\n    {\n      title: <div className={styles.headerTimeline}>{timeline}</div>,\n      dataIndex: 'timeline',\n      width: 'max-content',\n      render: (schedule: Schedule[]) => (\n        <div className={styles.timeline}>\n          {schedule.map(({ status, from, to }, i) => (\n            <TimelinesTooltip status={status} key={from + i}>\n              <div\n                className={clsx(styles.item, {\n                  [styles.itemWorking]: status === 'opened',\n                  [styles.itemLunch]: status === 'lunch',\n                })}\n                style={getStyles(from, to)}\n              />\n            </TimelinesTooltip>\n          ))}\n        </div>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <div className={styles.timelineUpright}>\n        <Table\n          columns={columns}\n          dataSource={data}\n          scroll={{ x: true, y: '380px' }}\n          sticky\n          pagination={false}\n          className={styles.table}\n        />\n      </div>\n    </div>\n  )\n}\n","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/components/TimelinesTable/TimelinesTooltip/TimelinesTooltip.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/OneTime.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":73,"column":6,"nodeType":"106","endLine":73,"endColumn":17,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":147,"column":3,"nodeType":"110","messageId":"111","endLine":185,"endColumn":4},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedDate'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimelinesType' needs the current value of 'selectedDate'.","ArrayExpression",["114"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [selectedDate, timelines]",{"range":"117","text":"118"},[2222,2233],"[selectedDate, timelines]"]