[{"/Users/divan/Desktop/projects/widget_works/src/index.tsx":"1","/Users/divan/Desktop/projects/widget_works/src/App.tsx":"2","/Users/divan/Desktop/projects/widget_works/src/pages/index.ts":"3","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/WorkSchedule.tsx":"4","/Users/divan/Desktop/projects/widget_works/src/utils/helpers.ts":"5","/Users/divan/Desktop/projects/widget_works/src/utils/icons/ArrowLeftS.tsx":"6","/Users/divan/Desktop/projects/widget_works/src/utils/icons/index.ts":"7","/Users/divan/Desktop/projects/widget_works/src/utils/icons/Left.tsx":"8","/Users/divan/Desktop/projects/widget_works/src/utils/icons/Right.tsx":"9","/Users/divan/Desktop/projects/widget_works/src/utils/icons/CalendarIcon.tsx":"10","/Users/divan/Desktop/projects/widget_works/src/utils/icons/Cross.tsx":"11","/Users/divan/Desktop/projects/widget_works/src/utils/hooks.ts":"12","/Users/divan/Desktop/projects/widget_works/src/components/Loader/Loader.tsx":"13","/Users/divan/Desktop/projects/widget_works/src/components/Empty/Empty.tsx":"14","/Users/divan/Desktop/projects/widget_works/src/utils/index.ts":"15","/Users/divan/Desktop/projects/widget_works/src/components/index.ts":"16","/Users/divan/Desktop/projects/widget_works/src/components/Calendar/Calendar.tsx":"17","/Users/divan/Desktop/projects/widget_works/src/utils/icons/TimelineIcon.tsx":"18","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/store/api.ts":"19","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/store/index.ts":"20","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/components/TimelinesTable/TimelinesTable.tsx":"21","/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/components/TimelinesTable/TimelinesTooltip/TimelinesTooltip.tsx":"22","/Users/divan/Desktop/projects/widget_works/src/utils/icons/OneTime.tsx":"23"},{"size":249,"mtime":1607808461054,"results":"24","hashOfConfig":"25"},{"size":109,"mtime":1607808461050,"results":"26","hashOfConfig":"25"},{"size":45,"mtime":1607354800648,"results":"27","hashOfConfig":"25"},{"size":4433,"mtime":1608113408614,"results":"28","hashOfConfig":"25"},{"size":317,"mtime":1607771319977,"results":"29","hashOfConfig":"25"},{"size":352,"mtime":1607631689077,"results":"30","hashOfConfig":"25"},{"size":188,"mtime":1607896030790,"results":"31","hashOfConfig":"25"},{"size":349,"mtime":1607631782211,"results":"32","hashOfConfig":"25"},{"size":350,"mtime":1607631901206,"results":"33","hashOfConfig":"25"},{"size":1302,"mtime":1607632034673,"results":"34","hashOfConfig":"25"},{"size":490,"mtime":1607632767136,"results":"35","hashOfConfig":"25"},{"size":917,"mtime":1607808149739,"results":"36","hashOfConfig":"25"},{"size":606,"mtime":1607771427425,"results":"37","hashOfConfig":"25"},{"size":426,"mtime":1607771806346,"results":"38","hashOfConfig":"25"},{"size":74,"mtime":1607808252120,"results":"39","hashOfConfig":"25"},{"size":98,"mtime":1607772736536,"results":"40","hashOfConfig":"25"},{"size":1345,"mtime":1607773309410,"results":"41","hashOfConfig":"25"},{"size":1024,"mtime":1607805783763,"results":"42","hashOfConfig":"25"},{"size":1647,"mtime":1607774762206,"results":"43","hashOfConfig":"25"},{"size":22,"mtime":1607808257242,"results":"44","hashOfConfig":"25"},{"size":2859,"mtime":1607898333664,"results":"45","hashOfConfig":"25"},{"size":504,"mtime":1607898826540,"results":"46","hashOfConfig":"25"},{"size":256,"mtime":1607896030788,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1r0wdrt",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/divan/Desktop/projects/widget_works/src/index.tsx",[],["97","98"],"/Users/divan/Desktop/projects/widget_works/src/App.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/pages/index.ts",[],"/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/WorkSchedule.tsx",["99"],"import React, { FC, useCallback, useEffect, useState } from 'react'\nimport { Button, Tabs } from 'antd'\nimport { TabsProps } from 'antd/es/tabs'\n\nimport {\n  TimelinesTable,\n  TimelinesType,\n} from './components/TimelinesTable/TimelinesTable'\nimport { Calendar, Empty, Loader } from '../../components'\nimport { Timeline, useTimelines } from './store'\nimport { ArrowLeftS, CalendarIcon, isEmpty } from '../../utils'\nimport styles from './WorkSchedule.module.scss'\n\nexport const START_WORK_TIME = 11\nexport const END_WORK_TIME = 22\n\nconst MAIN_TAB_KEY = {\n  TODAY: 'сегодня',\n  ALL_YEAR: 'весь год',\n}\n\nconst TODAY = new Date()\n\nexport const WorkSchedule: FC = () => {\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false)\n  const [isShowCalendarIcon, setIsShowCalendarIcon] = useState(false)\n  const [isShowButtonShow, setIsShowButtonShow] = useState(false)\n\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(TODAY)\n  const [timelinesType, setTimelinesType] = useState<TimelinesType>('day')\n\n  const onSelectDateHandler = useCallback((date: Date) => {\n    setSelectedDate(date)\n    setIsCalendarOpen(false)\n  }, [])\n\n  const onChangeMainTabHandler: TabsProps['onChange'] = useCallback(\n    (activeKey) => {\n      if (activeKey === MAIN_TAB_KEY.TODAY) {\n        setSelectedDate(TODAY)\n      } else {\n        setSelectedDate(undefined)\n      }\n\n      setIsShowCalendarIcon(activeKey !== MAIN_TAB_KEY.TODAY)\n      setIsShowButtonShow(activeKey !== MAIN_TAB_KEY.TODAY)\n    },\n    [],\n  )\n\n  const [timelines, isLoading] = useTimelines(selectedDate)\n  const [services, setServices] = useState<Timeline[]>([])\n  const [fun, setFun] = useState<Timeline[]>([])\n\n  useEffect(() => {\n    if (!timelines) return\n\n    const services = timelines.filter(({ type }) => type === 'services')\n    setServices(services)\n\n    const fun = timelines.filter(({ type }) => type === 'fun')\n    setFun(fun)\n\n    setTimelinesType(selectedDate ? 'day' : 'year')\n  }, [timelines])\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.buttonBack}>\n          <ArrowLeftS />\n          <span>НАЗАД</span>\n        </div>\n\n        <div className={styles.title}>\n          <span>РЕЖИМ РАБОТЫ</span>\n        </div>\n\n        <Tabs onChange={onChangeMainTabHandler} className={styles.mainTabs}>\n          <Tabs.TabPane\n            tab={MAIN_TAB_KEY.TODAY.toUpperCase()}\n            key={MAIN_TAB_KEY.TODAY}\n          />\n          <Tabs.TabPane\n            tab={MAIN_TAB_KEY.ALL_YEAR.toUpperCase()}\n            key={MAIN_TAB_KEY.ALL_YEAR}\n          />\n        </Tabs>\n\n        <Tabs\n          destroyInactiveTabPane\n          className={styles.tabs}\n          tabBarExtraContent={{\n            right: isShowCalendarIcon ? (\n              <Button\n                icon={<CalendarIcon />}\n                onClick={() => setIsCalendarOpen(true)}\n                type=\"primary\"\n              />\n            ) : (\n              <></>\n            ),\n          }}\n        >\n          <Tabs.TabPane tab=\"СЕРВИСЫ\" key=\"services\">\n            {isLoading ? (\n              <Loader className={styles.loader} />\n            ) : isEmpty(services) || !services ? (\n              <Empty />\n            ) : (\n              <TimelinesTable timelines={services} type={timelinesType} />\n            )}\n          </Tabs.TabPane>\n\n          <Tabs.TabPane tab=\"РАЗВЛЕЧЕНИЯ\" key=\"entertainments\">\n            {isLoading ? (\n              <Loader className={styles.loader} />\n            ) : isEmpty(fun) || !fun ? (\n              <Empty />\n            ) : (\n              <TimelinesTable timelines={fun} type={timelinesType} />\n            )}\n          </Tabs.TabPane>\n        </Tabs>\n\n        <div className={styles.mark}>\n          *Данные о работе являются предварительными и могут быть изменены в\n          зависимости от погодных условий и графика регламентных работ\n        </div>\n\n        {isShowButtonShow && (\n          <Button type=\"primary\" size=\"large\" className={styles.buttonShow}>\n            Посмотреть номера\n          </Button>\n        )}\n      </div>\n\n      <Calendar\n        isOpen={isCalendarOpen}\n        onClose={() => setIsCalendarOpen(false)}\n        date={selectedDate}\n        onSelectDate={onSelectDateHandler}\n      />\n    </>\n  )\n}\n","/Users/divan/Desktop/projects/widget_works/src/utils/helpers.ts",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/ArrowLeftS.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/index.ts",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/Left.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/Right.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/CalendarIcon.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/Cross.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/hooks.ts",[],"/Users/divan/Desktop/projects/widget_works/src/components/Loader/Loader.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/components/Empty/Empty.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/index.ts",[],"/Users/divan/Desktop/projects/widget_works/src/components/index.ts",[],"/Users/divan/Desktop/projects/widget_works/src/components/Calendar/Calendar.tsx",[],["100","101"],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/TimelineIcon.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/store/api.ts",[],"/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/store/index.ts",[],"/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/components/TimelinesTable/TimelinesTable.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/pages/WorkSchedule/components/TimelinesTable/TimelinesTooltip/TimelinesTooltip.tsx",[],"/Users/divan/Desktop/projects/widget_works/src/utils/icons/OneTime.tsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":65,"column":6,"nodeType":"108","endLine":65,"endColumn":17,"suggestions":"109"},{"ruleId":"102","replacedBy":"110"},{"ruleId":"104","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedDate'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimelinesType' needs the current value of 'selectedDate'.","ArrayExpression",["114"],["112"],["113"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [selectedDate, timelines]",{"range":"117","text":"118"},[1964,1975],"[selectedDate, timelines]"]